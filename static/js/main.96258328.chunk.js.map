{"version":3,"sources":["Components/FeedbackOptions/FeedbackOptions.module.css","Components/FeedbackOptions/FeedbackOptions.jsx","Components/Section/Section.jsx","Components/NotificationMessage/NotificationMessage.jsx","Components/Statistics/Statistics.jsx","Components/App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onButtonClick","className","styles","container","map","option","btn","type","name","onClick","Section","title","children","NotificationMessage","props","Statistics","good","neutral","bad","total","percent","App","useState","setGood","setNeutral","setBad","countTotalFeedback","e","target","prevState","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6IACAA,EAAOC,QAAU,CAAC,UAAY,mCAAmC,IAAM,+B,gKC0BxDC,EAvBS,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,cAClC,OACE,qBAAKC,UAAWC,IAAOC,UAAvB,SACGJ,EAAQK,KAAI,SAACC,GAAD,OACX,wBACEJ,UAAWC,IAAOI,IAElBC,KAAK,SACLC,KAAMH,EACNI,QAAST,EALX,SAOGK,GALIA,SCOAK,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,6BAAKD,IACJC,MCCQC,EALa,SAAAC,GAC1B,OAAO,mDCyBMC,EAzBI,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,IAAKC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAC/C,OACE,qCACa,IAAVD,GAAe,cAAC,EAAD,IACL,IAAVA,GACC,+BACE,wCAAWH,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACXC,EAAU,GAAK,qDAAwBA,EAAxB,cCiCXC,EAzCH,WACV,MAAwBC,mBAAS,GAAjC,mBAAON,EAAP,KAAaO,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOL,EAAP,KAAgBO,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOJ,EAAP,KAAYO,EAAZ,KASMC,EAAqB,WACzB,OAAOV,EAAOC,EAAUC,GAO1B,OACE,qCACE,cAAC,EAAD,CAASP,MAAM,wBAAf,SACE,cAAC,EAAD,CACEX,cAnBc,SAAC2B,GACrB,IAAQnB,EAASmB,EAAEC,OAAXpB,KACC,SAATA,GAAmBe,GAAQ,SAACM,GAAD,OAAeA,EAAY,KAC7C,YAATrB,GAAsBgB,GAAW,SAACK,GAAD,OAAeA,EAAY,KACnD,QAATrB,GAAkBiB,GAAO,SAACI,GAAD,OAAeA,EAAY,MAgB9C9B,QAAS,CAAC,OAAQ,UAAW,WAGjC,cAAC,EAAD,CAASY,MAAM,aAAf,SACE,cAAC,EAAD,CACEK,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOO,IACPN,QAjBCU,KAAKC,MAAOf,EAAOU,IAAwB,aClBtDM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.96258328.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FeedbackOptions_container__30ZjD\",\"btn\":\"FeedbackOptions_btn__2uuX1\"};","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styles from './FeedbackOptions.module.css'\r\n\r\nconst FeedbackOptions = ({ options, onButtonClick }) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      {options.map((option) => (\r\n        <button\r\n          className={styles.btn}\r\n          key={option}\r\n          type=\"button\"\r\n          name={option}\r\n          onClick={onButtonClick}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\noptions: PropTypes.array,\r\n  onButtonClick: PropTypes.func,\r\n}\r\n\r\nexport default FeedbackOptions\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n}\r\n\r\nexport default Section\r\n","import React from 'react'\r\n\r\n\r\nconst NotificationMessage = props => {\r\n  return <p>No feedback given</p>;\r\n}\r\n\r\n\r\nexport default NotificationMessage\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport NotificationMessage from '../NotificationMessage/NotificationMessage'\r\n\r\nconst Statistics = ({ good, neutral, bad, total, percent }) => {\r\n  return (\r\n    <>\r\n      {total === 0 && <NotificationMessage />}\r\n      {total !== 0 && (\r\n        <ul>\r\n          <li>Good: {good}</li>\r\n          <li>Neutral: {neutral}</li>\r\n          <li>Bad: {bad}</li>\r\n          <li>Total: {total}</li>\r\n          {percent > 0 && <li>Positive feedback: {percent}%</li>}\r\n        </ul>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  percent: PropTypes.number,\r\n}\r\n\r\nexport default Statistics\r\n","import { useState } from \"react\";\nimport \"./App.css\";\nimport FeedbackOptions from \"./FeedbackOptions/FeedbackOptions\";\nimport Section from \"./Section/Section\";\nimport Statistics from \"./Statistics/Statistics\";\n\nconst App = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const onButtonClick = (e) => {\n    const { name } = e.target;\n    name === \"good\" && setGood((prevState) => prevState + 1);\n    name === \"neutral\" && setNeutral((prevState) => prevState + 1);\n    name === \"bad\" && setBad((prevState) => prevState + 1);\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    return Math.round((good / countTotalFeedback()) * 100);\n  };\n\n  return (\n    <>\n      <Section title=\"Please leave feadback\">\n        <FeedbackOptions\n          onButtonClick={onButtonClick}\n          options={[\"good\", \"neutral\", \"bad\"]}\n        />\n      </Section>\n      <Section title=\"Statistics\">\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={countTotalFeedback()}\n          percent={countPositiveFeedbackPercentage()}\n        />\n      </Section>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./Components/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}